// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  email     String    @unique
  username  String    @unique
  firstName String?
  lastName  String?
  avatarUrl String?
  posts     Gallery[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Icon {
  id        Int     @id @default(autoincrement())
  gallery   Gallery @relation(fields: [galleryId], references: [id], onDelete: Cascade)
  galleryId Int     @unique
}

model Gallery {
  id        Int      @id @default(autoincrement())
  name      String
  icon      Icon?
  images    Image[]
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String
  images Image[]
}

model Tag {
  id     Int            @id @default(autoincrement())
  name   String
  images TagsOnImages[]
}

model Image {
  id           Int            @id @default(autoincrement())
  title        String
  source       String
  width        Int
  height       Int
  published    Boolean        @default(false)
  tags         TagsOnImages[]
  category     Category       @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId   Int
  collection   Gallery        @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model TagsOnImages {
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId      Int
  image      Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  imageId    Int
  assignedAt DateTime @default(now())

  @@id([tagId, imageId])
}
